#!/bin/bash
#Chef-Solo BootStrap Script , this is the script that will be executed on first run it will:
# - Install chef-solo to the lastest version using opscode bash script
# - Create a cron job that will execute chef-solo every 20 min
# lets install chef-solo
#####TO DO######
# - Check if wget/curl return 0 bytes file and report that!
#
#Version 0.1 - Initial
#Version 0.2 - Added AWS Python CLI installation so I can make secure calls to S3
######################
REPO="https://s3.amazonaws.com/kiputch-solo"
SOLOBOOT="others/install.sh"
SOLOROLES="roles/roles.tar.gz"
SOLOSCRIPT="install.sh"
LOCAL="/usr/local/bootstrap"
LOG="/var/log/bootstrap.log"
SOLOLOG="/var/log/chef-solo-install.sh.log"
#############################
exists() {
  if command -v $1 >/dev/null 2>&1
  then
    return 0
  else
    return 1
  fi
}
#Get Instance ID...
exists "wget"
if [ "$?" == "1" ];then
  error_n_exit "WGET was not Found on this system"
fi
ID=$(wget -q -O- http://169.254.169.254/latest/meta-data/instance-id)
   if [ -z $ID ];then
     error_n_exit "Could not get the instnace ID"
   else
   SOLORB="solorb/solo.rb_${ID}"
   fi
#Functions
error_n_exit()
{

echo "`date`:ERROR $1 Exiting..." >> $LOG
/bin/cat /tmp/stderr >> $LOG

}
ok_n_cont()
{
echo "`date`:OK $1" >> $LOG
}
mkdir -p $LOCAL || error_n_exit "Could not create folders"
create_folders()
{
mkdir -p  /var/chef-solo/cache /var/chef-solo/cache/cookbooks /etc/chef /var/chef-solo/roles /var/chef-solo/check-sum
if [ "$?" == "0" ];then
  return 0
else
  return 1
fi
}
do_wget() 
{
  echo "trying wget..."
  wget -O "$1" "$2" 2>/tmp/stderr
  rc=$?
  if [ "$rc" != "0" ]; then
    error_n_exit "WGET returned ERROR check $LOG for full stacktrace"
  fi 
  return 0
}

# do_curl URL FILENAME
do_curl() 
{
  echo "trying curl..."
  curl -sL -D /tmp/stderr "$1" > "$2"
  rc=$?

   if [ "$rc" != "0" ]; then
    error_n_exit "CURL returned ERROR check $LOG for full stacktrace"
   fi

  return 0
}
#Install Python CLI
cat /etc/issue | grep -w Ubuntu
if [ "$?" == 0 ];then 
  apt-get install -y python-pip 2>/tmp/stderr
  rc=$?
  pip install awscli 2>>/tmp/stderr
  rc2=$?
    if [[ $rc != "0" ]] || [[ $rc2 != "0" ]];then
      error_n_exit "Could not install AWS CLI Tools check /tmp/stderr for more info!"
    fi
fi
#Create Folders
create_folders
 if [ "$?" != "0" ];then
   error_n_exit "Failed to create folders"
 else
   ok_n_cont "Created Folders"
 fi
#Get Chef-Solo Install Script , Chef-Solo generated configuration files
###
exists "wget"
if [ "$?" == "0" ];then
  do_wget "$LOCAL/$SOLOSCRIPT" "$REPO/$SOLOBOOT"
  do_wget "/etc/chef/solo.rb" "$REPO/$SOLORB"
  do_wget "/var/chef-solo/roles/roles.tar.gz" "$REPO/$SOLOROLES"
  cd /var/chef-solo/roles/ || error_n_exit "could not change dir to roles"
  tar xvfz roles.tar.gz    || error_n_exit "could not extract roles.tar.gz"
elif [ "$?" == "1" ];then 
  error_n_exit "Must have WGET Installed!"
fi 

    chmod +x $LOCAL/$SOLOSCRIPT || error_n_exit "Could not set +x to to $LOCAL/$SOLOSCRIPT"
    source $LOCAL/$SOLOSCRIPT 2>&1 >> $SOLOLOG
     if [ "$?" == "0" ];then
      ok_n_cont "Looks like Chef-Solo Was Installed Successfully Check $SOLOLOG for more info"
     else
      error_n_exit "Chef-solo failed to install, check $SOLOLOG for more info"
     fi
#
mkdir -p /usr/local/scripts
### Lets set the cron job that will execute chef-solo every 20 minutes
wget -O "/usr/local/scripts/solocron.sh" "$REPO/others/solocron.sh"
chmod +x "/usr/local/scripts/solocron.sh"
##Setup the cronjob
echo "*/20 * * * *   /usr/local/scripts/solocron.sh" >> /tmp/solocrontab
#Enable the cron
crontab /tmp/solocrontab
rm -f /tmp/solocrontab
### lets end by setting permissions
chown root.root "/etc/chef" -R
chown root.root "/usr/local/scripts" -R
chown root.root "/var/chef-solo" -R
## Execute first chef-solo run ....
/usr/bin/chef-solo -L /var/log/solorun.log
#end
#

exit 0
